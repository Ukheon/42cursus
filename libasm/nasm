!<arch>
ft_strlen.s     1615526352  501   20    100644  142       `
section		.text
	global _ft_strlen

_ft_strlen:
	mov		rax, 0
	jmp		check

check:
	cmp	BYTE [rdi + rax], 0
	je	end
	inc	rax
	jmp	check
end:
	retft_strcpy.s     1615526352  501   20    100644  238       `
section		.text
	global _ft_strcpy

_ft_strcpy: ;dest rdi, src rsi
	mov		rcx, 0
	jmp		loop

loop:
    cmp	BYTE [rsi + rcx], 0
    je end
    mov dl, BYTE[rsi + rcx]
    mov BYTE[rdi + rcx], dl
	inc	rcx
	jmp	loop
end:
    mov rax, rdi
	ret
ft_strcmp.s     1615539115  501   20    100644  361       `
section		.text
	global _ft_strcmp

_ft_strcmp:
	mov		rcx, 0
	jmp		loop

loop:
    cmp BYTE [rsi + rcx], 0
    je  calc
    cmp BYTE [rdi + rcx], 0
    je  calc
    mov dl, BYTE[rsi + rcx]
    cmp	BYTE [rdi + rcx], dl
    jne calc
    inc rcx
    jmp loop
calc:
    mov dl, BYTE [rdi + rcx]
    sub dl, BYTE [rsi + rcx]
    movsx rax, dl
    jmp end
end:
    ret
ft_write.s      1615539121  501   20    100644  230       `
section		.text
	global _ft_write
    extern ___error
_ft_write:
	jmp		loop

loop:
    mov rax, 0x2000004
    syscall
    jc error
    ret
error:
    push rax
    call ___error
    pop rdx
    mov [rax], rdx
    mov rax, -1
    retft_read.s       1615526763  501   20    100644  252       `
section		.text
	global _ft_read
    extern ___error
    
_ft_read: ;dest rdi, src rsi
	jmp		loop

loop:
    mov rax, 0x2000003
    syscall
    jc error
    ret
error:
    push rax
    call ___error
    pop rdx
    mov [rax], rdx
    mov rax, -1
    ret